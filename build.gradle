buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        //classpath 'com.android.tools.build:gradle:0.12.+'
    }
}
apply plugin: 'com.android.application'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
}


android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    defaultConfig {
        applicationId "com.joey.expresscall"
        minSdkVersion 15
        targetSdkVersion 19
        versionCode 12
        versionName "1.1.2"
    }

    packagingOptions {
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
    }
    signingConfigs {
        debug {
            storeFile file(".\\JoeyApp.jks")
            storePassword "87654123"
            keyAlias "joeyapp"
            keyPassword "111111"
        }
        release {
            storeFile file(".\\JoeyApp.jks")
            storePassword "87654123"
            keyAlias "joeyapp"
            keyPassword "111111"
        }
        buildTypes {
            release {
                //移除无用的资源文件
                shrinkResources true
                //启用multidex的支持
                multiDexEnabled true
                //关闭混淆代码的功能
                minifyEnabled false
                //压缩对齐生成的apk包
                zipAlignEnabled true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
                signingConfig signingConfigs.release
            }
            debug {
                signingConfig signingConfigs.release
            }
        }

        File propFile = file('signing.properties');
        if (propFile.exists()) {
            def Properties props = new Properties()
            props.load(new FileInputStream(propFile))
            if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
                    props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
                android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
                android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
                android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
                android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
            } else {
                android.buildTypes.release.signingConfig = null
            }
        } else {
            android.buildTypes.release.signingConfig = null
        }
    }

    //修改生成的apk名字，格式为 app名_版本号_打包时间_渠道名_release.apk
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def oldFile = output.outputFile
            if (variant.buildType.name.equals('release')) {
//                def releaseApkName = getProductName() + "_v${defaultConfig.versionName}_${releaseTime()}_" + variant.productFlavors[0].name + '_release.apk'
                def releaseApkName = getProductName() + "_v${defaultConfig.versionName}_${releaseTime()}_" + '_release.apk'
                output.outputFile = new File(oldFile.parent, releaseApkName)
            } else {
                def debugApkName = getProductName() + "_v${defaultConfig.versionName}_${releaseTime()}_" + '_debug.apk'
                output.outputFile = new File(oldFile.parent, debugApkName);
            }
        }
    }
    dependencies {
        compile 'com.android.support:support-v4:19.1.0'
        compile 'com.android.support:support-v7:19.1.0'
        compile files('libs/fastjson-1.2.7.jar')
        compile files('libs/android-support-v4.jar')
        compile files('libs/android-support-v7-recyclerview.jar')
    }


    lintOptions {
        abortOnError false
    }
}
